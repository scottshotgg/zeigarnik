= __Application_Name__ Protobuf Documentation
:toc:



== zeigarnik.proto



=== CreateReminderReq



|===========================================
|*Field* |*Type* |*Label* |*Description*

|reminder | <<reminder.v1alpha1.Reminder,Reminder>> | |

|===========================================



=== CreateReminderRes



|===========================================
|*Field* |*Type* |*Label* |*Description*

|reminder | <<reminder.v1alpha1.Reminder,Reminder>> | |

|===========================================



=== DeleteReminderReq



|===========================================
|*Field* |*Type* |*Label* |*Description*

|id | <<string,string>> | |

|===========================================



=== DeleteReminderRes



|===========================================
|*Field* |*Type* |*Label* |*Description*

|deleted | <<bool,bool>> | |

|===========================================



=== GetReminderByIDReq



|===========================================
|*Field* |*Type* |*Label* |*Description*

|id | <<string,string>> | |

|===========================================



=== GetReminderByIDRes



|===========================================
|*Field* |*Type* |*Label* |*Description*

|reminder | <<reminder.v1alpha1.Reminder,Reminder>> | |

|===========================================



=== ListRemindersReq





=== ListRemindersRes



|===========================================
|*Field* |*Type* |*Label* |*Description*

|reminders | <<string,string>> |repeated |

|===========================================



=== Reminder



|===========================================
|*Field* |*Type* |*Label* |*Description*

|id | <<string,string>> | |

|created | <<int64,int64>> | |

|message | <<string,string>> | |

|to | <<string,string>> | |

|status | <<reminder.v1alpha1.ReminderStatus,ReminderStatus>> | |

|when | <<int64,int64>> | |

|typeOf | <<reminder.v1alpha1.ReminderType,ReminderType>> | |

|warnAt | <<int64,int64>> |repeated |

|===========================================



=== UpdateReminderReq



|===========================================
|*Field* |*Type* |*Label* |*Description*

|reminder | <<reminder.v1alpha1.Reminder,Reminder>> | |

|===========================================



=== UpdateReminderRes



|===========================================
|*Field* |*Type* |*Label* |*Description*

|reminder | <<reminder.v1alpha1.Reminder,Reminder>> | |

|===========================================





[[ReminderStatus]]
=== ReminderStatus


|=====================================
|*Name* |*Number* |*Description*

|UNKNOWN |0 |

|CREATED |1 |

|QUEUED |2 |

|FIRED |3 |

|MISSED |4 |

|=====================================


[[ReminderType]]
=== ReminderType


|=====================================
|*Name* |*Number* |*Description*

|INVALID |0 |

|AT |1 |

|AFTER |2 |

|=====================================



== Scalar Value Types

|==============================================================
|*.proto Type* |*Notes* |*C++ Type* |*Java Type* |*Python Type*

|[[double]] (((double))) double | |double |double |float

|[[float]] (((float))) float | |float |float |float

|[[int32]] (((int32))) int32 |Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead. |int32 |int |int

|[[int64]] (((int64))) int64 |Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead. |int64 |long |int/long

|[[uint32]] (((uint32))) uint32 |Uses variable-length encoding. |uint32 |int |int/long

|[[uint64]] (((uint64))) uint64 |Uses variable-length encoding. |uint64 |long |int/long

|[[sint32]] (((sint32))) sint32 |Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. |int32 |int |int

|[[sint64]] (((sint64))) sint64 |Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. |int64 |long |int/long

|[[fixed32]] (((fixed32))) fixed32 |Always four bytes. More efficient than uint32 if values are often greater than 2^28. |uint32 |int |int

|[[fixed64]] (((fixed64))) fixed64 |Always eight bytes. More efficient than uint64 if values are often greater than 2^56. |uint64 |long |int/long

|[[sfixed32]] (((sfixed32))) sfixed32 |Always four bytes. |int32 |int |int

|[[sfixed64]] (((sfixed64))) sfixed64 |Always eight bytes. |int64 |long |int/long

|[[bool]] (((bool))) bool | |bool |boolean |boolean

|[[string]] (((string))) string |A string must always contain UTF-8 encoded or 7-bit ASCII text. |string |String |str/unicode

|[[bytes]] (((bytes))) bytes |May contain any arbitrary sequence of bytes. |string |ByteString |str

|==============================================================