// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.4
// source: zeigarnik.proto

package reminder

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Something string `protobuf:"bytes,1,opt,name=something,proto3" json:"something,omitempty"`
}

func (x *TestReq) Reset() {
	*x = TestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestReq) ProtoMessage() {}

func (x *TestReq) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestReq.ProtoReflect.Descriptor instead.
func (*TestReq) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{0}
}

func (x *TestReq) GetSomething() string {
	if x != nil {
		return x.Something
	}
	return ""
}

type Reminder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Created int64  `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	To      string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Status  string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Moment  int64  `protobuf:"varint,6,opt,name=moment,proto3" json:"moment,omitempty"`
}

func (x *Reminder) Reset() {
	*x = Reminder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reminder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reminder) ProtoMessage() {}

func (x *Reminder) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reminder.ProtoReflect.Descriptor instead.
func (*Reminder) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{1}
}

func (x *Reminder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Reminder) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Reminder) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Reminder) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Reminder) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Reminder) GetMoment() int64 {
	if x != nil {
		return x.Moment
	}
	return 0
}

type CreateReminderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminder *Reminder `protobuf:"bytes,1,opt,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *CreateReminderReq) Reset() {
	*x = CreateReminderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReminderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReminderReq) ProtoMessage() {}

func (x *CreateReminderReq) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReminderReq.ProtoReflect.Descriptor instead.
func (*CreateReminderReq) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReminderReq) GetReminder() *Reminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type CreateReminderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminder *Reminder `protobuf:"bytes,1,opt,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *CreateReminderRes) Reset() {
	*x = CreateReminderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReminderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReminderRes) ProtoMessage() {}

func (x *CreateReminderRes) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReminderRes.ProtoReflect.Descriptor instead.
func (*CreateReminderRes) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{3}
}

func (x *CreateReminderRes) GetReminder() *Reminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type GetAllRemindersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllRemindersReq) Reset() {
	*x = GetAllRemindersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRemindersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRemindersReq) ProtoMessage() {}

func (x *GetAllRemindersReq) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRemindersReq.ProtoReflect.Descriptor instead.
func (*GetAllRemindersReq) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{4}
}

type GetAllRemindersRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminder []*Reminder `protobuf:"bytes,1,rep,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *GetAllRemindersRes) Reset() {
	*x = GetAllRemindersRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllRemindersRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllRemindersRes) ProtoMessage() {}

func (x *GetAllRemindersRes) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllRemindersRes.ProtoReflect.Descriptor instead.
func (*GetAllRemindersRes) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllRemindersRes) GetReminder() []*Reminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type GetReminderByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetReminderByIDReq) Reset() {
	*x = GetReminderByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReminderByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReminderByIDReq) ProtoMessage() {}

func (x *GetReminderByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReminderByIDReq.ProtoReflect.Descriptor instead.
func (*GetReminderByIDReq) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{6}
}

func (x *GetReminderByIDReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetReminderByIDRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminder *Reminder `protobuf:"bytes,1,opt,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *GetReminderByIDRes) Reset() {
	*x = GetReminderByIDRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReminderByIDRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReminderByIDRes) ProtoMessage() {}

func (x *GetReminderByIDRes) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReminderByIDRes.ProtoReflect.Descriptor instead.
func (*GetReminderByIDRes) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{7}
}

func (x *GetReminderByIDRes) GetReminder() *Reminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type UpdateReminderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminder *Reminder `protobuf:"bytes,1,opt,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *UpdateReminderReq) Reset() {
	*x = UpdateReminderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReminderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReminderReq) ProtoMessage() {}

func (x *UpdateReminderReq) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReminderReq.ProtoReflect.Descriptor instead.
func (*UpdateReminderReq) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateReminderReq) GetReminder() *Reminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type UpdateReminderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reminder *Reminder `protobuf:"bytes,1,opt,name=reminder,proto3" json:"reminder,omitempty"`
}

func (x *UpdateReminderRes) Reset() {
	*x = UpdateReminderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReminderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReminderRes) ProtoMessage() {}

func (x *UpdateReminderRes) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReminderRes.ProtoReflect.Descriptor instead.
func (*UpdateReminderRes) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateReminderRes) GetReminder() *Reminder {
	if x != nil {
		return x.Reminder
	}
	return nil
}

type DeleteReminderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteReminderReq) Reset() {
	*x = DeleteReminderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReminderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReminderReq) ProtoMessage() {}

func (x *DeleteReminderReq) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReminderReq.ProtoReflect.Descriptor instead.
func (*DeleteReminderReq) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteReminderReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteReminderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteReminderRes) Reset() {
	*x = DeleteReminderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zeigarnik_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReminderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReminderRes) ProtoMessage() {}

func (x *DeleteReminderRes) ProtoReflect() protoreflect.Message {
	mi := &file_zeigarnik_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReminderRes.ProtoReflect.Descriptor instead.
func (*DeleteReminderRes) Descriptor() ([]byte, []int) {
	return file_zeigarnik_proto_rawDescGZIP(), []int{11}
}

var File_zeigarnik_proto protoreflect.FileDescriptor

var file_zeigarnik_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x7a, 0x65, 0x69, 0x67, 0x61, 0x72, 0x6e, 0x69, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x07, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x22, 0x8e, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x08,
	0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x22, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72,
	0x52, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12,
	0x2e, 0x0a, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x22,
	0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x32, 0xc4, 0x03, 0x0a, 0x0f, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x72,
	0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x3a,
	0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x64, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x78, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x2c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x26, 0x1a, 0x1a, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x72, 0x2f, 0x7b, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x69, 0x64, 0x7d, 0x3a,
	0x08, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x65, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x72, 0x65,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x65, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zeigarnik_proto_rawDescOnce sync.Once
	file_zeigarnik_proto_rawDescData = file_zeigarnik_proto_rawDesc
)

func file_zeigarnik_proto_rawDescGZIP() []byte {
	file_zeigarnik_proto_rawDescOnce.Do(func() {
		file_zeigarnik_proto_rawDescData = protoimpl.X.CompressGZIP(file_zeigarnik_proto_rawDescData)
	})
	return file_zeigarnik_proto_rawDescData
}

var file_zeigarnik_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_zeigarnik_proto_goTypes = []interface{}{
	(*TestReq)(nil),            // 0: reminder.TestReq
	(*Reminder)(nil),           // 1: reminder.Reminder
	(*CreateReminderReq)(nil),  // 2: reminder.CreateReminderReq
	(*CreateReminderRes)(nil),  // 3: reminder.CreateReminderRes
	(*GetAllRemindersReq)(nil), // 4: reminder.GetAllRemindersReq
	(*GetAllRemindersRes)(nil), // 5: reminder.GetAllRemindersRes
	(*GetReminderByIDReq)(nil), // 6: reminder.GetReminderByIDReq
	(*GetReminderByIDRes)(nil), // 7: reminder.GetReminderByIDRes
	(*UpdateReminderReq)(nil),  // 8: reminder.UpdateReminderReq
	(*UpdateReminderRes)(nil),  // 9: reminder.UpdateReminderRes
	(*DeleteReminderReq)(nil),  // 10: reminder.DeleteReminderReq
	(*DeleteReminderRes)(nil),  // 11: reminder.DeleteReminderRes
}
var file_zeigarnik_proto_depIdxs = []int32{
	1,  // 0: reminder.CreateReminderReq.reminder:type_name -> reminder.Reminder
	1,  // 1: reminder.CreateReminderRes.reminder:type_name -> reminder.Reminder
	1,  // 2: reminder.GetAllRemindersRes.reminder:type_name -> reminder.Reminder
	1,  // 3: reminder.GetReminderByIDRes.reminder:type_name -> reminder.Reminder
	1,  // 4: reminder.UpdateReminderReq.reminder:type_name -> reminder.Reminder
	1,  // 5: reminder.UpdateReminderRes.reminder:type_name -> reminder.Reminder
	2,  // 6: reminder.ReminderService.CreateReminder:input_type -> reminder.CreateReminderReq
	6,  // 7: reminder.ReminderService.GetReminder:input_type -> reminder.GetReminderByIDReq
	8,  // 8: reminder.ReminderService.UpdateReminder:input_type -> reminder.UpdateReminderReq
	10, // 9: reminder.ReminderService.DeleteReminder:input_type -> reminder.DeleteReminderReq
	3,  // 10: reminder.ReminderService.CreateReminder:output_type -> reminder.CreateReminderRes
	7,  // 11: reminder.ReminderService.GetReminder:output_type -> reminder.GetReminderByIDRes
	9,  // 12: reminder.ReminderService.UpdateReminder:output_type -> reminder.UpdateReminderRes
	11, // 13: reminder.ReminderService.DeleteReminder:output_type -> reminder.DeleteReminderRes
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_zeigarnik_proto_init() }
func file_zeigarnik_proto_init() {
	if File_zeigarnik_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_zeigarnik_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reminder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReminderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReminderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRemindersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllRemindersRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReminderByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReminderByIDRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReminderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReminderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReminderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zeigarnik_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReminderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zeigarnik_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zeigarnik_proto_goTypes,
		DependencyIndexes: file_zeigarnik_proto_depIdxs,
		MessageInfos:      file_zeigarnik_proto_msgTypes,
	}.Build()
	File_zeigarnik_proto = out.File
	file_zeigarnik_proto_rawDesc = nil
	file_zeigarnik_proto_goTypes = nil
	file_zeigarnik_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ReminderServiceClient is the client API for ReminderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReminderServiceClient interface {
	CreateReminder(ctx context.Context, in *CreateReminderReq, opts ...grpc.CallOption) (*CreateReminderRes, error)
	GetReminder(ctx context.Context, in *GetReminderByIDReq, opts ...grpc.CallOption) (*GetReminderByIDRes, error)
	UpdateReminder(ctx context.Context, in *UpdateReminderReq, opts ...grpc.CallOption) (*UpdateReminderRes, error)
	DeleteReminder(ctx context.Context, in *DeleteReminderReq, opts ...grpc.CallOption) (*DeleteReminderRes, error)
}

type reminderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewReminderServiceClient(cc grpc.ClientConnInterface) ReminderServiceClient {
	return &reminderServiceClient{cc}
}

func (c *reminderServiceClient) CreateReminder(ctx context.Context, in *CreateReminderReq, opts ...grpc.CallOption) (*CreateReminderRes, error) {
	out := new(CreateReminderRes)
	err := c.cc.Invoke(ctx, "/reminder.ReminderService/CreateReminder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reminderServiceClient) GetReminder(ctx context.Context, in *GetReminderByIDReq, opts ...grpc.CallOption) (*GetReminderByIDRes, error) {
	out := new(GetReminderByIDRes)
	err := c.cc.Invoke(ctx, "/reminder.ReminderService/GetReminder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reminderServiceClient) UpdateReminder(ctx context.Context, in *UpdateReminderReq, opts ...grpc.CallOption) (*UpdateReminderRes, error) {
	out := new(UpdateReminderRes)
	err := c.cc.Invoke(ctx, "/reminder.ReminderService/UpdateReminder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reminderServiceClient) DeleteReminder(ctx context.Context, in *DeleteReminderReq, opts ...grpc.CallOption) (*DeleteReminderRes, error) {
	out := new(DeleteReminderRes)
	err := c.cc.Invoke(ctx, "/reminder.ReminderService/DeleteReminder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReminderServiceServer is the server API for ReminderService service.
type ReminderServiceServer interface {
	CreateReminder(context.Context, *CreateReminderReq) (*CreateReminderRes, error)
	GetReminder(context.Context, *GetReminderByIDReq) (*GetReminderByIDRes, error)
	UpdateReminder(context.Context, *UpdateReminderReq) (*UpdateReminderRes, error)
	DeleteReminder(context.Context, *DeleteReminderReq) (*DeleteReminderRes, error)
}

// UnimplementedReminderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedReminderServiceServer struct {
}

func (*UnimplementedReminderServiceServer) CreateReminder(context.Context, *CreateReminderReq) (*CreateReminderRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReminder not implemented")
}
func (*UnimplementedReminderServiceServer) GetReminder(context.Context, *GetReminderByIDReq) (*GetReminderByIDRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReminder not implemented")
}
func (*UnimplementedReminderServiceServer) UpdateReminder(context.Context, *UpdateReminderReq) (*UpdateReminderRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReminder not implemented")
}
func (*UnimplementedReminderServiceServer) DeleteReminder(context.Context, *DeleteReminderReq) (*DeleteReminderRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReminder not implemented")
}

func RegisterReminderServiceServer(s *grpc.Server, srv ReminderServiceServer) {
	s.RegisterService(&_ReminderService_serviceDesc, srv)
}

func _ReminderService_CreateReminder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReminderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReminderServiceServer).CreateReminder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reminder.ReminderService/CreateReminder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReminderServiceServer).CreateReminder(ctx, req.(*CreateReminderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReminderService_GetReminder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReminderByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReminderServiceServer).GetReminder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reminder.ReminderService/GetReminder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReminderServiceServer).GetReminder(ctx, req.(*GetReminderByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReminderService_UpdateReminder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReminderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReminderServiceServer).UpdateReminder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reminder.ReminderService/UpdateReminder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReminderServiceServer).UpdateReminder(ctx, req.(*UpdateReminderReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReminderService_DeleteReminder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReminderReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReminderServiceServer).DeleteReminder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/reminder.ReminderService/DeleteReminder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReminderServiceServer).DeleteReminder(ctx, req.(*DeleteReminderReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReminderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "reminder.ReminderService",
	HandlerType: (*ReminderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateReminder",
			Handler:    _ReminderService_CreateReminder_Handler,
		},
		{
			MethodName: "GetReminder",
			Handler:    _ReminderService_GetReminder_Handler,
		},
		{
			MethodName: "UpdateReminder",
			Handler:    _ReminderService_UpdateReminder_Handler,
		},
		{
			MethodName: "DeleteReminder",
			Handler:    _ReminderService_DeleteReminder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "zeigarnik.proto",
}
